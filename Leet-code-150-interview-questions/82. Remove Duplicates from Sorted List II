/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* dummy = new ListNode(0, head);
        ListNode* prev = dummy;

        while(head){
            if(head->next && head->val == head->next->val){
                while(head->next && head->val == head->next->val) head = head->next;
                prev->next = head->next; // note the correct node to point is after the head thats head->next not on head ok
            }else{
                prev = prev->next;
            }

            head = head->next;
        }

        return dummy->next;
    }
};
