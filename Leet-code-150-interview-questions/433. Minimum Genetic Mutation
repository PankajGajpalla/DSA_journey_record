# Intuition
* simpel bfs traversal 
* taking from q and trying ACGT each in every index and checking if its not visited and present in bank if so then considering it ..
* after each loop incrementing level
* if not find return -1;

# Code
```cpp []
class Solution {
public:
    int minMutation(string startGene, string endGene, vector<string>& bank) {
        unordered_set<string> bankset(bank.begin(), bank.end());
        unordered_set<string> visited;
        queue<string> q;
        q.push(startGene);
        visited.insert(startGene);
        int level = 0;

        while(!q.empty()){
            int n = q.size();
            while(n--){
                string curr = q.front();
                q.pop();

                if(curr == endGene){
                    return level;
                }

                for(char ch: "ACGT"){
                    for(int i=0; i<curr.length(); i++){
                        string neighbour = curr;
                        neighbour[i] = ch;

                        if(visited.find(neighbour) == visited.end() && bankset.find(neighbour) != bankset.end()){
                            q.push(neighbour);
                            visited.insert(neighbour);
                        }
                    }
                }
            }
            level++;
        }

        return -1;
    }
};
```
## for clear understanding
https://www.youtube.com/watch?v=H3kSFSv-t30
