class Solution:
    def snakesAndLadders(self, board: List[List[int]]) -> int:
        length = len(board)

        board.reverse()

        def intToPos(square):
            r = (square-1) // length
            c = (square-1) % length
            if(r%2):
                c = length - c -1
            
            return [r, c]
        
        q = deque()
        q.append([1,0])
        visited = set()

        while q:
            square, move = q.popleft()

            for i in range(1,7):
                nextSquare = square + i
                r, c = intToPos(nextSquare)

                if(board[r][c] != -1):
                    nextSquare = board[r][c]
                if(nextSquare == length*length):
                    return move+1
                if nextSquare not in visited:
                    visited.add(nextSquare)
                    q.append([nextSquare, move+1])
        
        return -1

        
