class Solution {
public:
    void dfs(vector<vector<char>>& grid, int row, int col, int r, int c){
        if(row<0 || col<0 ||row>=r || col>=c || grid[row][col] == '0'){
            return;
        }

        grid[row][col] = '0';

        dfs(grid, row-1, col, r, c);
        dfs(grid, row+1, col, r, c);
        dfs(grid, row, col-1, r, c);
        dfs(grid, row, col+1, r, c);
        
    }
    int numIslands(vector<vector<char>>& grid) {
        int r = grid.size();
        int c = grid[0].size();

        int cnt = 0;
        for(int i=0; i<r; i++){
            for(int j=0; j<c; j++){
                if(grid[i][j] == '1'){
                    cnt++;
                    dfs(grid, i, j, r, c);
                }
            }
        }

        return cnt;
    }
};
