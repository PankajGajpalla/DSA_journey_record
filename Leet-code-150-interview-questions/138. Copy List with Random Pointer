/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head) return NULL;

        Node* temp = head;
        while(temp){
            Node* newnode = new Node(temp->val);
            newnode->next = temp->next;
            temp->next = newnode;
            temp = newnode->next;
        }
        temp = head;
        while(temp){
            if(temp->random){
                temp->next->random = temp->random->next;
            }
            temp = temp->next->next;
        }

        temp = head;
        Node* ans = head->next;
        Node* pem = ans;

        while(temp){
            temp->next = pem->next;
            temp = temp->next;
            if(temp){
                pem->next = temp->next;
                pem = temp->next;
            }
        }

        return ans;
    }
};
