/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(!head || k<=1 || head->next ==NULL) return head;

        ListNode* tail = head;
        for(int i=0; i<k; i++){
            if(tail == NULL) return head;
            tail = tail->next;
        }

        ListNode* newhead = reverse(head, tail);
        head->next = reverseKGroup(tail, k);
        return newhead;
    }
private:
    ListNode* reverse(ListNode* head, ListNode* tail){
        ListNode* prev = NULL;
        ListNode* curr = head;
        while(curr != tail){
            ListNode* nxt = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nxt;
        }
        return prev;
    }
};
