#cpp optimal
class Solution {
public:
    int strStr(string haystack, string needle) {
        if(haystack.length() <needle.length()) return -1;
        if(haystack == needle) return 0;
        
        for(int i=0; i<(haystack.length()-needle.length() +1); i++){
            if(haystack.length()-i >= needle.length() && (haystack.substr(i, needle.length()) == needle)){
                return i;
            } 
        }
        return -1;

    }
};


#in python
class Solution(object):
    def strStr(self, haystack, needle):
        """
        :type haystack: str
        :type needle: str
        :rtype: int
        """
        for i in range(len(haystack)-len(needle) + 1):
            if haystack[i: i+len(needle)] == needle:
                return i
        
        return -1
        


# brute force

class Solution {
public:
    int strStr(string haystack, string needle) {
        if(haystack.length() < needle.length()) return -1;
        if(haystack == needle) return 0;

        char c = needle[0];
        int i = 0;
        int ans = -1;
        while(i<haystack.length() && (haystack.length() - i >= needle.length())){
            if(haystack[i] == c ){
                
                int n = 0;
                int j;
                for(j=i; j<i+needle.length(); j++){
                    if(haystack[j] != needle[n++]) break;
                }
                if(j==i+needle.length()){
                        ans = i;
                        return ans;
                    }
            }
            i++;
        }
        return ans;

    }
};


