void inorder(TreeNode<int>* root, vector<int> &v){
    if(root == NULL) return;

    inorder(root->left, v);
    v.push_back(root->data);
    inorder(root->right, v);
}
TreeNode<int>* solve(vector<int>&v, int s, int e){
    if(s>e) return NULL;

    int mid = (s+e)/2;
    TreeNode<int>* root = new TreeNode<int>(v[mid]);
    root->left = solve(v, s, mid-1);
    root->right = solve(v, mid+1, e);
    return root;
}
TreeNode<int>* balancedBst(TreeNode<int>* root) {
    if(root == NULL) return NULL;

    vector<int> v;
    inorder(root, v);
    int e = v.size()-1;

    return solve(v, 0, e);
}
