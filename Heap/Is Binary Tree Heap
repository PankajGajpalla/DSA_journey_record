class Solution {
  public:
    
    bool isCBT(struct Node* root, int i, int n){
        if(root == NULL) return true;
        
        if(i>=n) return false;
        
        bool left = isCBT(root->left, 2*i +1, n);
        bool right = isCBT(root->right, 2*i +2, n);
        
        return left && right;
    }
    
    bool isMaxHeap(struct Node* root, int i, int n){
        if((n/2 ) <= i && i<n ){
            return true;
        }else if( root->left != NULL && root->right == NULL ){
            if(root->data > root->left->data){
                return true;
            }else{
                return false;
            }
        }else{
            bool left = isMaxHeap(root->left, i*2+1, n);
            bool right = isMaxHeap(root->right, i*2+2, n);
            
            return ((root->left->data < root->data) && (root->right->data < root->data));
        }
    }
    
    int cnt(struct Node* root){
        if(root== NULL) return 0;
        
        int ans = 1 + cnt(root->left) +cnt(root->right);
        return ans;
    }
    
    bool isHeap(struct Node* tree) {
        if(tree==NULL) return true;
        
        int n = cnt(tree);
        return isCBT(tree, 0, n) && isMaxHeap(tree, 0, n);
    }
};
