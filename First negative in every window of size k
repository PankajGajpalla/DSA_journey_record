class Solution {
  public:
    vector<int> FirstNegativeInteger(vector<int>& arr, int k) {
        if(arr.size()<k) return {0};
        queue<int> q;
        vector<int> ans;
        
        for(int i=0; i<k; i++){
            if(arr[i]<0){
                q.push(i);
            }
        }
        for(int i=k; i<=arr.size(); i++){
            if(!q.empty() && arr[q.front()]<0){
                ans.push_back(arr[q.front()]);
            }else{
                ans.push_back(0);
            }
            
            while(!q.empty() && q.front() <= i-k){
                q.pop();
            }
            if(i<arr.size() && arr[i]<0){
                q.push(i);
            }
        }
        return ans;
        
    }
};






class Solution {
  public:
    vector<int> FirstNegativeInteger(vector<int>& arr, int k) {
        if( arr.size() <k) return {0};
        int prev = 0;
        int curr = k-1;
        vector<int> ans;
        while(curr<arr.size()){
            int ele = 0;
            for(int i=prev; i<=curr; i++){
                if(arr[i]<0){
                    ele = arr[i];
                    break;
                }
            }
            ans.push_back(ele);
            prev++;
            curr++;
            
        }
        return ans;
        
    }
};
