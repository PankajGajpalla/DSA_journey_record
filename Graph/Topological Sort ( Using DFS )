#include <bits/stdc++.h> 
void toposort(int node, unordered_map<int, list<int>>&adj, unordered_map<int, bool>&visited, stack<int>&s){
    visited[node] =1;

    for(auto neigbhour: adj[node]){
        if(!visited[neigbhour]){
            toposort(neigbhour, adj, visited, s);
        }
    }

    s.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    unordered_map<int, list<int>> adj;
    for(int i=0; i<edges.size(); i++){
        int u = edges[i][0];
        int v = edges[i][1];

        adj[u].push_back(v);
    }

    unordered_map<int, bool> visited;
    stack<int> s;

    for(int i=0; i<v; i++){
        if(!visited[i]){
            toposort(i, adj, visited, s);
        }
    }

    vector<int> ans;
    while(!s.empty()){
        ans.push_back(s.top());
        s.pop();
    }

    return ans;
}
