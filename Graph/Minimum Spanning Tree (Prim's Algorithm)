#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    // Write your code here.
    unordered_map<int, list<pair<int, int>>> adj;

    for(auto i: g){
        int v = i.first.first;
        int u = i.first.second;
        int w = i.second;

        adj[v].push_back({u, w});
        adj[u].push_back({v, w});
    }

    vector<bool> visited(n+1, false);
    vector<int> key(n+1, INT_MAX);
    vector<int> parent(n+1, -1);

    key[1] = 0;
    
    for(int i=1; i<n+1; i++){
        int mini = INT_MAX;
        int u;

        for(int k=1; k<n+1; k++){
            if(visited[k] == false && key[k]<mini){
                mini = key[k];
                u = k;
            }
        }

        visited[u] = true;

        for(auto j: adj[u]){
            if(visited[j.first] == false && (j.second < key[j.first])){
                key[j.first] = j.second;
                parent[j.first] = u;
            }
        }
    }

    vector<pair<pair<int, int>, int>> ans;

    for(int i=2; i<n+1; i++){
        ans.push_back({{parent[i], i}, key[i]});
    }

    return ans;
}
